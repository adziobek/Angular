2010 - start projektu 
2016 - Aktualna stabilna wersja: 2.0.0 (14 września 2016)
2012 - powstał Batarang - wtyczka do Chrome, ułatwiająca debugowanie Angulara w przeglądarce

-- Podstawy
AngularJS - framework JavaScriptowy, wydany przez Google, wspierający tworzenie aplikacji webowych opartych na pojedyńczej stronie
			(SPA - Single Page Application) oraz wspierający wzorzec MVC. Model i Controller są po stronie widoku i to one generują
			nowego htmla, więc nie trzeba pukać do serwera i przeładowywac stronę.
			
SPA(single-page application) - aplikacja oparta tylko na jednej stronie(tak jak jest to w aplikacjach desktopowych). Wszystkie 
			potrzebne JavaScripty, Cssy, html są ładowane tylko raz, gdy ładuje się główna strona. 
			
Konto nauki angulara: http://campus.codeschool.com/courses/shaping-up-with-angular-js/level/1/section/1/video/1
mail:zucariyo@cartelera.org		
l:AngularMM
h:angular16			
			
Dyrektywa - dodatek do taga htmlowego, poszerzający jego możliwości, odnoszący się do kodu w JavaScripcie.
		

Moduł - kontener na kontrolery, serwisy.
		Tworzony gdy podamy 2 parametry:
		var myModule = angular.module('myModule', []);
		Wyjmowany gdy podamy jeden parametr:
		var myModule = angular.module('myModule');

Two way data binding - powiązanie widok-model. Jeśli jakiś tekst wpisujemy do inputa to nie trzeba robić subimta na formularzu
        by te dane zapisać w modelu. Dane te zostaną zapisane w ng-model, modelu po stronie widoku.
Serwisy - w Angularze są wbudowane serwisy, które są singletonami(jedna instancja na całą aplikację/ moduł).
        Np. serwis $http, za pomocą ,którego można się komunikować z serwerem, wysyłać jsona.
        Można tworzyć swoje serwisy.
Dyrektywy - wbudowane(ng-model, ng-repeat) - poszerzają możliwości tagów htmlowych. Można tworzyć też własne, które
        będą templatami htmlowymi.
MVC- w angularze nie ma czystego MVC. Jest za to MVVM - Model-Viev-ViewModel

Bezpieczeństwo - Angulara uważa się za niebezpiecznego. Wszystko odbywa sie w java scripcie po stronie klienta. Aby
        aplikacja była bezpieczna, potrzebna jest autentyfikacja i autoryzacja po stronie serwera. Gdy nie trzeba się logowac to spoko,
        a jak trzeba to trzeba użyć np. Springa MVC dodatkowo.
		
-- Pytania
1)Do czego służy obiekt angular.injector?
Do pozyskiwania serwisów oraz do wstrzykiwania zależności.
